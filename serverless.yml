service: team-1-final-project
plugins:
  - serverless-python-requirements

provider:
  name: aws
  stage: dev
  region: eu-west-1
  role: arn:aws:iam::670948818876:role/ServerlessResourcesRole
  environment:
    TEST_QUEUE_URL: { Ref: TeamOneTestQueue }

package:
  individually: true

resources:
  Resources:
    team1testqueue:
      Type: "AWS::SQS::Queue"
      Properties:
        MessageRetentionPeriod: 1209600
        QueueName: TeamOneTestQueue

functions:
  handler-extract:
    runtime: python3.8
    handler: handler_extract.start
    module: lambdas
    events:
      - s3:
          bucket: cafe-data-data-pump-dev-team-1
          event: s3:ObjectCreated:Put
          rules:
            - suffix: .csv
          existing: true
    environment:
      QUEUE_NAME: TeamOneTestQueue
      BUCKET_NAME: cafe-data-data-pump-dev-team-1
  handler-transform:
    runtime: python3.8
    handler: handler_transform.start
    module: lambdas
  handler-load:
    runtime: python3.8
    handler: handler_load.start
    module: lambdas
    vpc:
      securityGroupIds:
        - !ImportValue RedshiftAndVPC-VPCSecurtiyGroup
      subnetIds:
        - !ImportValue RedshiftAndVPC-VPCPrivateSubnet
    environment:
      DB_HOST: !ImportValue RedshiftAndVPC-ClusterAddress
      DB_USER: team1
      DB_PORT: !ImportValue RedshiftAndVPC-ClusterPort
      DB_NAME: team1db
      DB_CLUSTER: !ImportValue RedshiftAndVPC-ClusterID
  redshift-lambda:
    runtime: python3.8
    handler: handler_etl.start
    module: lambdas
    vpc:
      securityGroupIds:
        - !ImportValue RedshiftAndVPC-VPCSecurtiyGroup
      subnetIds:
        - !ImportValue RedshiftAndVPC-VPCPrivateSubnet
    environment:
      DB_HOST: !ImportValue RedshiftAndVPC-ClusterAddress
      DB_USER: team1
      DB_PORT: !ImportValue RedshiftAndVPC-ClusterPort
      DB_NAME: team1db
      DB_CLUSTER: !ImportValue RedshiftAndVPC-ClusterID